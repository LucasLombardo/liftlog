type Workout @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  date: AWSDate
  notes: String
  timeStarted: Int
  timeEnded: Int
  setGroups: [SetGroup] @hasMany(indexName: "byWorkout", fields: ["id"])
}

type SetGroup @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  notes: String
  sets: [Set] @hasMany(indexName: "bySetGroup", fields: ["id"])
  workoutID: ID! @index(name: "byWorkout")
  excerciseID: ID! @index(name: "byExcercise")
}

type Set @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  seconds: Int
  distance: Float
  distanceUnits: String
  weight: Float
  weightUnits: Float
  reps: Int
  setgroupID: ID! @index(name: "bySetGroup")
}

type Excercise @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  name: String!
  excerciseType: String!
  notes: String
  setGroups: [SetGroup] @hasMany(indexName: "byExcercise", fields: ["id"])
}

type Category @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  name: String!
}
