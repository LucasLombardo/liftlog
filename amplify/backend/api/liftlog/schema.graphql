type Category @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  name: String
  excerciseID: ID! @index(name: "byExcercise")
}

type Excercise @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  name: String
  excerciseType: String
  notes: String
  SetGroups: [SetGroup] @hasMany(indexName: "byExcercise", fields: ["id"])
  Categories: [SetGroup] @hasMany(indexName: "byExcercise", fields: ["id"])
}

type Set @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  seconds: Int
  distance: Float
  distanceUnits: String
  weight: Float
  weightUnits: String
  reps: Int
  setgroupID: ID! @index(name: "bySetGroup")
}

type SetGroup @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  notes: String
  workoutID: ID! @index(name: "byWorkout")
  Sets: [Set] @hasMany(indexName: "bySetGroup", fields: ["id"])
  excerciseID: ID! @index(name: "byExcercise")
}

type Workout @model @auth(rules: [{allow: public}, {allow: owner}]) {
  id: ID!
  date: AWSDate!
  notes: String
  SetGroups: [SetGroup] @hasMany(indexName: "byWorkout", fields: ["id"])
}
 